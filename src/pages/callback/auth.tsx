import * as S from "screens/callback-auth/styles";
import Head from "next/head";
import { useEffect } from "react";
import { NextPageWithLayout } from "@app-types";
import { GetServerSideProps } from "next";
import { LizaLoader } from "shared/liza-loader";
import { useRouter } from "next/router";
import { toast } from "react-hot-toast";
import { api } from "@modules/axios";
import { preventAuthUsersMiddleware } from "core/modules/authentication";

interface PageProps {}

export const getServerSideProps: GetServerSideProps<{}> =
  preventAuthUsersMiddleware(async context => {
    if (!context.query?.code) {
      return {
        redirect: {
          destination: "/activity",
          permanent: false,
        },
      };
    }

    return { props: {} };
  });

const Page: NextPageWithLayout<PageProps> = ({}) => {
  const router = useRouter();

  useEffect(() => {
    if (router.query.code) {
      (async () => {
        const authTempCode = router.query.code;

        const result = await api.get(`/auth/token?code=${authTempCode}`, {
          withCredentials: true,
        });

        if (result.data.success) {
          toast.success("Signed in successfully");
          router.replace("/");
        } else {
          toast.error("Signing in failed, try again");
          router.replace("/signin");
        }
      })();
    }
  }, [router.query.code]);

  return (
    <>
      <Head>
        <title>Charity | Daiko</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <S.Main>
        <LizaLoader width={150} height={150} />
      </S.Main>
    </>
  );
};

export default Page;
